<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
  <job id="dbToXml" xmlns="http://www.springframework.org/schema/batch"
    restartable="true">
    <step id="myStep" allow-start-if-complete="true">
      <tasklet>
        <chunk reader="itemReader" writer="itemWriter"
          commit-interval="2" />
        <listeners>
          <listener ref="readListener" />
          <listener ref="writeListener" />
        </listeners>
      </tasklet>
    </step>
  </job>

  <bean id="itemReader"
    class="org.springframework.batch.item.database.JdbcCursorItemReader"
    scope="step">
    <property name="dataSource" ref="dataSource"></property>
    <property name="sql" value="select * from user"></property>
    <property name="rowMapper">
      <bean class="com.rajendarreddyj.springbatchlistener.dao.UserRowMapper" />
    </property>
  </bean>


  <bean id="itemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
    <property name="resource" value="file:xml/user_data3.xml"></property>
    <property name="marshaller" ref="unmarshaller"></property>
    <property name="rootTagName" value="users"></property>
  </bean>

  <bean id="unmarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
    <property name="aliases">
      <util:map id="aliases">
        <entry key="user"
          value="com.rajendarreddyj.springbatchlistener.model.User"></entry>
      </util:map>
    </property>
  </bean>

  <bean id="readListener"
    class="com.rajendarreddyj.springbatchlistener.listener.ReadListener" />

  <bean id="writeListener"
    class="com.rajendarreddyj.springbatchlistener.listener.WriteListener">
    <property name="dataSource" ref="dataSource"></property>
  </bean>

</beans>
